(
    20 : (task = 'list' or task = 'editRelationship' or (task = 'inspect' and smartRelationship.isToMany = 0)) => componentName = BMLLinkToOne [com.webobjects.directtoweb.Assignment],
    40 : *true* => navigationState = Home [com.webobjects.directtoweb.Assignment],
    50 : pageConfiguration like '*Movie*' => navigationState = Movies [com.webobjects.directtoweb.Assignment],
    50 : pageConfiguration like '*Studio*' => navigationState = Studios [com.webobjects.directtoweb.Assignment],
    60 : pageConfiguration like 'ListMovie*' => navigationState = Movies.SearchMovie [com.webobjects.directtoweb.Assignment],
    60 : pageConfiguration like 'QueryMovie*' => navigationState = Movies.SearchMovie [com.webobjects.directtoweb.Assignment],
    60 : pageConfiguration like 'CreateMovie*' => navigationState = Movies.CreateMovie [com.webobjects.directtoweb.Assignment],
    60 : pageConfiguration like 'QueryStudio*' => navigationState = Studios.SearchStudio [com.webobjects.directtoweb.Assignment],
    60 : pageConfiguration like 'CreateStudio*' => navigationState = Studios.CreateStudio [com.webobjects.directtoweb.Assignment],
    60 : pageConfiguration like 'ListReview*' => navigationState = Admin.Review.SearchReview [com.webobjects.directtoweb.Assignment],
    60 : pageConfiguration like 'ListTalent*' => navigationState = Admin.Talent.SearchTalent [com.webobjects.directtoweb.Assignment],
    60 : pageConfiguration like 'ListVoting*' => navigationState = Admin.Voting.SearchVoting [com.webobjects.directtoweb.Assignment],
    60 : pageConfiguration like 'QueryReview*' => navigationState = Admin.Review.SearchReview [com.webobjects.directtoweb.Assignment],
    60 : pageConfiguration like 'QueryTalent*' => navigationState = Admin.Talent.SearchTalent [com.webobjects.directtoweb.Assignment],
    60 : pageConfiguration like 'QueryVoting*' => navigationState = Admin.Voting.SearchVoting [com.webobjects.directtoweb.Assignment],
    60 : pageConfiguration like 'CreateReview*' => navigationState = Admin.Review.CreateReview [com.webobjects.directtoweb.Assignment],
    60 : pageConfiguration like 'CreateTalent*' => navigationState = Admin.Talent.CreateTalent [com.webobjects.directtoweb.Assignment],
    60 : pageConfiguration like 'CreateVoting*' => navigationState = Admin.Voting.CreateVoting [com.webobjects.directtoweb.Assignment],
    60 : (pageConfiguration like 'InspectMovie*' or pageConfiguration like 'EditMovie*') => navigationState = Movies.SearchMovie [com.webobjects.directtoweb.Assignment],
    60 : (pageConfiguration like 'InspectStudio*' or pageConfiguration like 'EditStudio*') => navigationState = Studios.SearchStudio [com.webobjects.directtoweb.Assignment],
    60 : (pageConfiguration like 'InspectReview*' or pageConfiguration like 'EditReview*') => navigationState = Admin.Review.SearchReview [com.webobjects.directtoweb.Assignment],
    60 : (pageConfiguration like 'InspectTalent*' or pageConfiguration like 'EditTalent*') => navigationState = Admin.Talent.SearchTalent [com.webobjects.directtoweb.Assignment],
    60 : (pageConfiguration like 'InspectVoting*' or pageConfiguration like 'EditVoiting*') => navigationState = Admin.Voting.SearchVoting [com.webobjects.directtoweb.Assignment],
    60 : (task = 'edit' and smartAttribute.className = 'java.lang.String' and smartAttribute.width >= 110) => componentName = ERD2WEditString [com.webobjects.directtoweb.Assignment],
    70 : propertyKey = 'studio' => restrictedChoiceKey = objectsFromContext [com.webobjects.directtoweb.Assignment],
    100 : *true* => look = ERModernLook [com.webobjects.directtoweb.Assignment],
    100 : *true* => datePickerRangeHigh = 20091205 [com.webobjects.directtoweb.Assignment],
    100 : *true* => datePickerRangeHigh = 20091215 [com.webobjects.directtoweb.Assignment],
    100 : *true* => isEntityEditable = true [com.webobjects.directtoweb.BooleanAssignment],
    100 : *true* => isEntityDeletable = true [com.webobjects.directtoweb.BooleanAssignment],
    100 : *true* => objectCardContainerClass = container [com.webobjects.directtoweb.Assignment],
    100 : propertyKey = 'movie' => keyWhenRelationship = title [com.webobjects.directtoweb.Assignment],
    100 : entity.name = 'Studio' => displayKeyForEntity = name [com.webobjects.directtoweb.Assignment],
    100 : propertyKey = 'studio' => keyWhenRelationship = name [com.webobjects.directtoweb.Assignment],
    100 : entity.name = 'Movie' => displayNameForEntity = Movie [com.webobjects.directtoweb.Assignment],
    100 : propertyKey = 'movies' => keysWhenRelationship = (    title) [com.webobjects.directtoweb.Assignment],
    100 : propertyKey = 'plotSummary' => keyWhenRelationship = summary [com.webobjects.directtoweb.Assignment],
    100 : entity.name = 'MovieRole' => displayNameForEntity = Movie Role [com.webobjects.directtoweb.Assignment],
    100 : *true* => objectCardColumnClass = col-sm-12 col-md-6 pb-3 col-lg-4 [com.webobjects.directtoweb.Assignment],
    100 : entity.name = 'TalentPhoto' => displayKeyForEntity = talent.firstName [com.webobjects.directtoweb.Assignment],
    100 : pageConfiguration like 'EditRelationship*' => useAjaxControls = false [com.webobjects.directtoweb.BooleanAssignment],
    100 : (propertyKey = 'budget' or propertyKey = 'revenue') => formatter = $#,##0.00 [com.webobjects.directtoweb.Assignment],
    100 : (task = 'query' and entity.name = 'Movie') => displayPropertyKeys = (    title) [com.webobjects.directtoweb.Assignment],
    100 : (task = 'query' and entity.name = 'Studio') => displayPropertyKeys = (    name) [com.webobjects.directtoweb.Assignment],
    100 : (task = 'inspect' and smartRelationship.isToMany = 1) => componentName = ERDList [com.webobjects.directtoweb.Assignment],
    100 : (task = 'query' and entity.name = 'Review') => displayPropertyKeys = (    reviewer) [com.webobjects.directtoweb.Assignment],
    100 : (task = 'query' and entity.name = 'Voting') => displayPropertyKeys = (    numberOfVotes) [com.webobjects.directtoweb.Assignment],
    100 : pageConfiguration like '*ListMovie*' => defaultSortOrdering = (    title,    compareAscending) [com.webobjects.directtoweb.Assignment],
    100 : pageConfiguration like '*ListStudio*' => defaultSortOrdering = (    name,    compareAscending) [com.webobjects.directtoweb.Assignment],
    100 : task = 'queryAll' => sectionsContents = (    Movie,    Studio,    Talent,    Voting,    Review) [com.webobjects.directtoweb.Assignment],
    100 : (pageConfiguration like 'Edit*Movie' or pageConfiguration like 'Inspect*Movie') => subTask = tab [com.webobjects.directtoweb.Assignment],
    100 : pageConfiguration like '*InspectStudio' => displayPropertyKeys = (    name,    budget,    movies) [com.webobjects.directtoweb.Assignment],
    100 : (task = 'query' and entity.name = 'Talent') => displayPropertyKeys = (    firstName,    lastName) [com.webobjects.directtoweb.Assignment],
    100 : (task = 'query' and entity.name = 'Movie') => displayPropertyKeys = (    title,    category,    rated) [com.webobjects.directtoweb.Assignment],
    100 : (task = 'edit' and (entity.name = 'Movie' and propertyKey = 'studio')) => componentName = BMLEditToOne [com.webobjects.directtoweb.Assignment],
    100 : (task = 'list' and entity.name = 'Review') => displayPropertyKeys = (    review,    reviewer,    movie) [com.webobjects.directtoweb.Assignment],
    100 : (entity.name = 'MovieRole' and task = 'edit') => displayPropertyKeys = (    roleName,    movie,    talent) [com.webobjects.directtoweb.Assignment],
    100 : (propertyKey = 'rated' and entity.name = 'Movie' and task = 'edit') => componentName = BMLCustomSelectString [com.webobjects.directtoweb.Assignment],
    100 : (entity.name = 'Studio' and task = 'edit' and propertyKey = 'movies') => componentName = ERMDEditRelationship [com.webobjects.directtoweb.Assignment],
    100 : (task = 'edit' and (entity.name = 'Movie' and propertyKey = 'studio')) => componentName = ERMD2WEditToOneTypeAhead [com.webobjects.directtoweb.Assignment],
    100 : (task = 'list' and entity.name = 'Voting') => displayPropertyKeys = (    movie,    numberOfVotes,    runningAverage) [com.webobjects.directtoweb.Assignment],
    100 : (entity.name = 'Studio' and task = 'edit' and propertyKey = 'movies') => listConfigurationName = ListEmbeddedFooMovie [com.webobjects.directtoweb.Assignment],
    100 : (smartRelationship != null and smartRelationship.isToMany = 0 and task = 'inspect') => componentName = ERD2WDisplayToOne [com.webobjects.directtoweb.Assignment],
    100 : (propertyKey = 'rated' and entity.name = 'Movie') => displayPropertyValues = (    G,    PG,    "PG-13",    R,    "NC-17") [com.webobjects.directtoweb.Assignment],
    100 : (pageConfiguration = 'ListMovie' and not (pageConfiguration like '*Embed*')) => repetitionComponentName = BMLCardRepetition [com.webobjects.directtoweb.Assignment],
    100 : (task = 'inspect' and entity.name = 'Talent') => displayPropertyKeys = (    firstName,    lastName,    photo,    roles,    moviesDirected) [com.webobjects.directtoweb.Assignment],
    100 : (task = 'edit' and entity.name = 'Movie') => displayPropertyKeys = (    title,    category,    rated,    dateReleased,    "plotSummary.summary") [com.webobjects.directtoweb.Assignment],
    100 : (pageConfiguration = 'ListEmbeddedMovie' and parentPageConfiguration like '*Studio') => displayPropertyKeys = (    title,    category,    rated) [com.webobjects.directtoweb.Assignment],
    100 : ((task = 'select' or task = 'list' or task = 'editRelationship') and entity.name = 'Movie') => displayPropertyKeys = (    title,    category,    rated) [com.webobjects.directtoweb.Assignment],
    100 : ((task = 'list' or task = 'editRelationship' or (task = 'inspect' and smartRelationship.isToMany = 0)) and smartAttribute.className = 'java.lang.String') => componentName = ERMD2WInspectLink [com.webobjects.directtoweb.Assignment],
    100 : ((look = 'ERModernLook' and (task = 'list' and (parentPageConfiguration like '*Edit*' or parentPageConfiguration like '*Create*'))) or pageConfiguration like 'EditRelationship*') => actions = {} [com.webobjects.directtoweb.Assignment],
    100 : *true* => cardSectionsContents = {"card-text" = "object.plotSummary.summary"; "card-title" = "object.title"; "cardImageLink" = "https://designrevision.com/docs/shards/images/3.jpg"; "inspectActionKeypath" = "object"; } [com.webobjects.directtoweb.Assignment],
    100 : (entity.name = 'Movie' and (task = 'inspect' or task = 'edit')) => tabSectionsContents = (        (        "General Idea",                (            "Details And Stuff",            title,            category,            dateReleased,            rated        ),                (            Summary,            "plotSummary.summary",            posterName        )    ),        (        Additional,        revenue,        studio    ),        (        People,        directors    ),        (        Roles,        roles    )) [com.webobjects.directtoweb.Assignment],
    120 : pageConfiguration = 'EditRelationshipEmbeddedMovie' => defaultBatchSize = 10 [com.webobjects.directtoweb.Assignment],
    120 : pageConfiguration = 'EditRelationshipEmbeddedMovie' => showBottomBatchCount = false [com.webobjects.directtoweb.BooleanAssignment],
    120 : pageConfiguration = 'EditRelationshipEmbeddedMovieRole' => toManyRepetitionComponentName = ERMDReducedListPageRepetition [com.webobjects.directtoweb.Assignment],
    200 : (propertyKey = 'photo' and (task = 'inspect' or task = 'list')) => componentName = BMLDisplayPhoto [com.webobjects.directtoweb.Assignment]
)