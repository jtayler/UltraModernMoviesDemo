(
    40 : *true* => navigationState = Home [com.webobjects.directtoweb.Assignment],
    50 : pageConfiguration like '*Movie*' => navigationState = Movies [com.webobjects.directtoweb.Assignment],
    50 : pageConfiguration like '*Studio*' => navigationState = Studios [com.webobjects.directtoweb.Assignment],
    60 : pageConfiguration like 'ListMovie*' => navigationState = Movies.SearchMovie [com.webobjects.directtoweb.Assignment],
    60 : pageConfiguration like 'QueryMovie*' => navigationState = Movies.SearchMovie [com.webobjects.directtoweb.Assignment],
    60 : pageConfiguration like 'CreateMovie*' => navigationState = Movies.CreateMovie [com.webobjects.directtoweb.Assignment],
    60 : pageConfiguration like 'QueryStudio*' => navigationState = Studios.SearchStudio [com.webobjects.directtoweb.Assignment],
    60 : pageConfiguration like 'CreateStudio*' => navigationState = Studios.CreateStudio [com.webobjects.directtoweb.Assignment],
    60 : pageConfiguration like 'ListReview*' => navigationState = Admin.Review.SearchReview [com.webobjects.directtoweb.Assignment],
    60 : pageConfiguration like 'ListTalent*' => navigationState = Admin.Talent.SearchTalent [com.webobjects.directtoweb.Assignment],
    60 : pageConfiguration like 'ListVoting*' => navigationState = Admin.Voting.SearchVoting [com.webobjects.directtoweb.Assignment],
    60 : pageConfiguration like 'QueryReview*' => navigationState = Admin.Review.SearchReview [com.webobjects.directtoweb.Assignment],
    60 : pageConfiguration like 'QueryTalent*' => navigationState = Admin.Talent.SearchTalent [com.webobjects.directtoweb.Assignment],
    60 : pageConfiguration like 'QueryVoting*' => navigationState = Admin.Voting.SearchVoting [com.webobjects.directtoweb.Assignment],
    60 : pageConfiguration like 'CreateReview*' => navigationState = Admin.Review.CreateReview [com.webobjects.directtoweb.Assignment],
    60 : pageConfiguration like 'CreateTalent*' => navigationState = Admin.Talent.CreateTalent [com.webobjects.directtoweb.Assignment],
    60 : pageConfiguration like 'CreateVoting*' => navigationState = Admin.Voting.CreateVoting [com.webobjects.directtoweb.Assignment],
    60 : (pageConfiguration like 'InspectMovie*' or pageConfiguration like 'EditMovie*') => navigationState = Movies.SearchMovie [com.webobjects.directtoweb.Assignment],
    60 : (pageConfiguration like 'InspectStudio*' or pageConfiguration like 'EditStudio*') => navigationState = Studios.SearchStudio [com.webobjects.directtoweb.Assignment],
    60 : (pageConfiguration like 'InspectReview*' or pageConfiguration like 'EditReview*') => navigationState = Admin.Review.SearchReview [com.webobjects.directtoweb.Assignment],
    60 : (pageConfiguration like 'InspectTalent*' or pageConfiguration like 'EditTalent*') => navigationState = Admin.Talent.SearchTalent [com.webobjects.directtoweb.Assignment],
    60 : (pageConfiguration like 'InspectVoting*' or pageConfiguration like 'EditVoiting*') => navigationState = Admin.Voting.SearchVoting [com.webobjects.directtoweb.Assignment],
    60 : (task = 'edit' and smartAttribute.className = 'java.lang.String' and smartAttribute.width >= 110) => componentName = ERD2WEditString [com.webobjects.directtoweb.Assignment],
    100 : *true* => look = ERModernLook [com.webobjects.directtoweb.Assignment],
    100 : *true* => datePickerRangeHigh = 20091205 [com.webobjects.directtoweb.Assignment],
    100 : *true* => datePickerRangeHigh = 20091215 [com.webobjects.directtoweb.Assignment],
    100 : *true* => isEntityEditable = true [com.webobjects.directtoweb.BooleanAssignment],
    100 : *true* => isEntityDeletable = true [com.webobjects.directtoweb.BooleanAssignment],
    100 : *true* => objectCardContainerClass = container [com.webobjects.directtoweb.Assignment],
    100 : entity.name = 'Studio' => displayKeyForEntity = name [com.webobjects.directtoweb.Assignment],
    100 : entity.name = 'Movie' => displayNameForEntity = Movie [com.webobjects.directtoweb.Assignment],
    100 : propertyKey = 'movies' => keysWhenRelationship = (    title) [com.webobjects.directtoweb.Assignment],
    100 : propertyKey = 'plotSummary' => keyWhenRelationship = summary [com.webobjects.directtoweb.Assignment],
    100 : entity.name = 'MovieRole' => displayNameForEntity = Movie Role [com.webobjects.directtoweb.Assignment],
    100 : *true* => objectCardColumnClass = col-sm pb-3 col-md-6 col-lg-4 [com.webobjects.directtoweb.Assignment],
    100 : propertyKey = 'budget' => formatter = $###,###.##;0;-###,###.## [com.webobjects.directtoweb.Assignment],
    100 : pageConfiguration like 'EditRelationship*' => useAjaxControls = false [com.webobjects.directtoweb.BooleanAssignment],
    100 : (entity.name = 'Movie' and propertyKey = 'studio') => keyWhenRelationship = name [com.webobjects.directtoweb.Assignment],
    100 : (task = 'inspect' and smartRelationship.isToMany = 1) => componentName = ERDList [com.webobjects.directtoweb.Assignment],
    100 : pageConfiguration like '*EditStudio' => displayPropertyKeys = (    name,    budget) [com.webobjects.directtoweb.Assignment],
    100 : pageConfiguration = 'ListMovie' => defaultSortOrdering = (    title,    compareAscending) [com.webobjects.directtoweb.Assignment],
    100 : pageConfiguration = 'ListStudio' => defaultSortOrdering = (    name,    compareAscending) [com.webobjects.directtoweb.Assignment],
    100 : task = 'queryAll' => sectionsContents = (    Movie,    Studio,    Talent,    Voting,    Review) [com.webobjects.directtoweb.Assignment],
    100 : (task = 'edit' and entity.name = 'Talent') => displayPropertyKeys = (    firstName,    lastName) [com.webobjects.directtoweb.Assignment],
    100 : (pageConfiguration like '_Edit*Movie' or pageConfiguration like 'Inspect*Movie') => subTask = tab [com.webobjects.directtoweb.Assignment],
    100 : (task = 'query' and entity.name = 'Movie') => displayPropertyKeys = (    title,    category,    rated) [com.webobjects.directtoweb.Assignment],
    100 : (task = 'inspect' and (entity.name = 'Movie' and propertyKey = 'studio')) => componentName = BMLLinkToOne [com.webobjects.directtoweb.Assignment],
    100 : (task = 'edit' and entity.name = 'Voting') => displayPropertyKeys = (    numberOfVotes,    runningAverage) [com.webobjects.directtoweb.Assignment],
    100 : (entity.name = 'Studio' and task = 'edit' and propertyKey = 'movies') => componentName = ERMDEditRelationship [com.webobjects.directtoweb.Assignment],
    100 : (task = 'edit' and (entity.name = 'Movie' and propertyKey = 'studio')) => componentName = ERMD2WEditToOneTypeAhead [com.webobjects.directtoweb.Assignment],
    100 : (entity.name = 'Movie' and (task = 'inspect' or task = 'edit')) => tabSectionsContents = (    title,    plotSummary) [com.webobjects.directtoweb.Assignment],
    100 : (entity.name = 'Studio' and task = 'edit' and propertyKey = 'movies') => listConfigurationName = ListEmbeddedFooMovie [com.webobjects.directtoweb.Assignment],
    100 : (smartRelationship != null and smartRelationship.isToMany = 0 and task = 'inspect') => componentName = ERD2WDisplayToOne [com.webobjects.directtoweb.Assignment],
    100 : (pageConfiguration = 'ListMovie' and not (pageConfiguration like '*Embed*')) => repetitionComponentName = BMLCardRepetition [com.webobjects.directtoweb.Assignment],
    100 : (pageConfiguration = 'ListEmbeddedMovie' and parentPageConfiguration like '*Studio') => displayPropertyKeys = (    title,    category,    rated) [com.webobjects.directtoweb.Assignment],
    100 : ((task = 'select' or task = 'list' or task = 'editRelationship') and entity.name = 'Movie') => displayPropertyKeys = (    title,    category,    rated) [com.webobjects.directtoweb.Assignment],
    100 : (task = 'edit' and entity.name = 'Movie') => displayPropertyKeys = (    title,    category,    rated,    category,    dateReleased,    rated,    "plotSummary.summary") [com.webobjects.directtoweb.Assignment],
    100 : ((task = 'list' or task = 'inspect') and (propertyKey = 'title' or propertyKey = 'firstName' or propertyKey = 'name' or propertyKey = 'roleName' or propertyKey = 'movie' or propertyKey = 'studio' or propertyKey like '*movie')) => componentName = ERMD2WInspectLink [com.webobjects.directtoweb.Assignment],
    100 : *true* => cardSectionsContents = {"card-link-title" = "Tell me more &rarr;"; "card-text" = "object.plotSummary.summary"; "card-title" = "object.title"; "cardImageLink" = "https://designrevision.com/docs/shards/images/3.jpg"; "inspectObjectAction" = "inspectObjectAction"; } [com.webobjects.directtoweb.Assignment],
    100 : (entity.name = 'Movie' and (task = 'inspect' or task = 'edit')) => tabSectionsContents = (        (        "General Idea",                (            "Details And Stuff",            title,            category,            dateReleased,            rated        ),                (            Summary,            "plotSummary.summary",            posterName        )    ),        (        Additional,        revenue,        studio    ),        (        People,        directors    ),        (        Roles,        roles    )) [com.webobjects.directtoweb.Assignment],
    110 : (task = 'list' or task = 'editRelationship' or (task = 'inspect' and smartRelationship.isToMany = 0)) => componentName = ERMD2WInspectLink [com.webobjects.directtoweb.Assignment],
    120 : pageConfiguration = 'EditRelationshipEmbeddedMovie' => defaultBatchSize = 0 [com.webobjects.directtoweb.Assignment],
    120 : pageConfiguration = 'EditRelationshipEmbeddedMovie' => showBottomBatchCount = false [com.webobjects.directtoweb.BooleanAssignment],
    120 : pageConfiguration = 'EditRelationshipEmbeddedMovie' => toManyRepetitionComponentName = ERMDReducedListPageRepetition [com.webobjects.directtoweb.Assignment],
    200 : (entity.name = 'MovieRole' and task = 'edit') => displayPropertyKeys = (    roleName) [com.webobjects.directtoweb.Assignment],
    200 : (propertyKey = 'photo' and (task = 'inspect' or task = 'list')) => componentName = BMLDisplayPhoto [com.webobjects.directtoweb.Assignment]
)